// reference: http://qiita.com/informationsea/items/cd1d8d130a5c7b0bc31a

apply plugin: 'java'
apply plugin: 'application'

def clientClass = 'lympt.client.LymptClient'
def serverClass = 'lympt.server.LymptServer'
def programName = "Lympt"

task clientJar(type: Jar, dependsOn: jar) {
    archiveName = "${programName}Client.jar"
    manifest {
        attributes 'Main-Class' : clientClass
    }

    from configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}
    from "$buildDir/classes/main"
    from "$buildDir/resources/main"
}

task serverJar(type: Jar, dependsOn: jar) {
    archiveName = "${programName}Server.jar"
    manifest {
        attributes 'Main-Class' : serverClass
    }

    from configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}
    from "$buildDir/classes/main"
    from "$buildDir/resources/main"
}

task server(dependsOn: serverJar) << {
    def executableFile = file("$buildDir/deploy/${programName}Server")
    executableFile.parentFile.mkdirs()

    def output = new FileOutputStream(executableFile)
    output.write(("#!/bin/sh\n" +
            "\n" +
            "exec java -jar \$0 \"\$@\"\n").bytes)
    output.write file("$libsDir/${programName}Server.jar").bytes
    output.close()
    executableFile.executable = true
}

task client(dependsOn: clientJar) << {
    def executableFile = file("$buildDir/deploy/${programName}Client")
    executableFile.parentFile.mkdirs()

    def output = new FileOutputStream(executableFile)
    output.write(("#!/bin/sh\n" +
            "\n" +
            "exec java -jar \$0 \"\$@\"\n").bytes)
    output.write file("$libsDir/${programName}Client.jar").bytes
    output.close()
    executableFile.executable = true
}
